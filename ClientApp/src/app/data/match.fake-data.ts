import { MatchEventEnum } from '../features/football/enums/match-event.enum';
import { MatchStatusEnum } from '../features/football/enums/match-status.enum';
import { Match, MatchEvent } from '../features/football/models/api/match.model';

export const matchData: Match[] = [
  {
    id: 1,
    leagueId: 1,
    homeId: 1,
    homeScore: 6,
    awayId: 2,
    awayScore: 2,
    status: MatchStatusEnum.Completed,
    date: new Date(2024, 10, 17, 17, 0, 0),
    matchEvents: [
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 2,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 2,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 2,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
    ] as MatchEvent[],
    lineup: {
      homeGkId: 1,
      homeDfIds: [2, 3],
      awayGkId: 5,
      awayDfIds: [6, 7],
      awaySubstituteIds: [8],
    },
  },
  {
    id: 2,
    leagueId: 1,
    homeId: 1,
    homeScore: 6,
    awayId: 2,
    awayScore: 5,
    status: MatchStatusEnum.Completed,
    date: new Date(2024, 10, 24, 17, 0, 0),
    matchEvents: [
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 2,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 2,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 9,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        id: 12,
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 8,
        time: Math.floor(Math.random() * 90) + 1,
      },
    ] as MatchEvent[],
    lineup: {
      homeGkId: 1,
      homeDfIds: [2, 3],
      awayGkId: 5,
      awayDfIds: [6, 7],
      homeSubstituteIds: [9],
      awaySubstituteIds: [8],
    },
  },
  {
    id: 3,
    leagueId: 1,
    homeId: 1,
    homeScore: 1,
    awayId: 2,
    awayScore: 1,
    status: MatchStatusEnum.Completed,
    date: new Date(2024, 11, 1, 17, 0, 0),
    matchEvents: [
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
    ] as MatchEvent[],
    lineup: {
      homeGkId: 1,
      homeDfIds: [2, 3],
      awayGkId: 5,
      awayDfIds: [6, 7],
      homeSubstituteIds: [9],
      awaySubstituteIds: [8],
    },
  },
  {
    id: 4,
    leagueId: 1,
    homeId: 1,
    homeScore: 2,
    awayId: 2,
    awayScore: 1,
    status: MatchStatusEnum.Completed,
    date: new Date(2024, 11, 8, 17, 0, 0),
    matchEvents: [
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 1,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 4,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
    ] as MatchEvent[],
    lineup: {
      homeGkId: 1,
      homeDfIds: [2, 3],
      awayGkId: 5,
      awayDfIds: [6, 7],
      homeSubstituteIds: [4],
      awaySubstituteIds: [8],
    },
  },
  {
    id: 5,
    leagueId: 1,
    homeId: 1,
    homeScore: 3,
    awayId: 2,
    awayScore: 4,
    status: MatchStatusEnum.Completed,
    date: new Date(2024, 11, 15, 17, 0, 0),
    matchEvents: [
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 1,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 4,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 7,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 6,
        time: Math.floor(Math.random() * 90) + 1,
      },
    ] as MatchEvent[],
    lineup: {
      homeGkId: 1,
      homeDfIds: [2, 3],
      homeStIds: [4, 10],
      awayGkId: 5,
      awayDfIds: [6, 7],
      awayStIds: [8, 9],
    },
  },
  {
    id: 6,
    leagueId: 1,
    homeId: 1,
    homeScore: 5,
    awayId: 2,
    awayScore: 2,
    status: MatchStatusEnum.Completed,
    date: new Date(2024, 11, 15, 18, 0, 0),
    matchEvents: [
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 3,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 1,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 1,
        userId: 4,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
      {
        eventType: MatchEventEnum.Goal,
        teamId: 2,
        userId: 5,
        time: Math.floor(Math.random() * 90) + 1,
      },
    ] as MatchEvent[],
    lineup: {
      homeGkId: 1,
      homeDfIds: [2, 3],
      homeStIds: [4, 10],
      awayGkId: 5,
      awayDfIds: [6, 7],
      awayStIds: [8, 9],
    },
  },
  {
    id: 7,
    leagueId: 1,
    homeId: 1,
    homeScore: 0,
    awayId: 2,
    awayScore: 0,
    status: MatchStatusEnum.NotStart,
    date: new Date(2024, 11, 22, 17, 0, 0),
    location: 'Sân bóng Matheson',
    matchEvents: [] as MatchEvent[],
    lineup: {
      homeGkId: 1,
      homeDfIds: [2, 3],
      awayGkId: 5,
      awayDfIds: [6, 7],
      awaySubstituteIds: [8],
    },
  },
];
